plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.emazon'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	gradlePluginPortal()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	// JUnit 5
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2' // Reemplaza por la última versión
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2' // Reemplaza por la última versión
	// Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0' // Para Spring MVC

	implementation 'io.github.cdimascio:dotenv-java:3.0.0' //To load .env vars

}

tasks.named('test') {
	useJUnitPlatform()
}
